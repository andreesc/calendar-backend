{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","helpers/prepare-events.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/modal.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","API_BASE_URL","process","fetchWithToken","endpoint","data","method","url","token","localStorage","getItem","fetch","headers","body","JSON","stringify","fetchWithoutToken","types","prepareEvents","events","map","event","end","moment","toDate","start","eventAddNew","type","payload","clearActiveEvent","eventUpdated","eventDeleted","eventLoaded","login","user","checkingFinish","startlogout","dispatch","clear","logout","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rEmail","rPassword","rPassword2","rName","formRegisterValues","handleRegisterInputChange","useDispatch","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endDate","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","style","onRequestClose","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","startEventAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","location","pathname","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bfd23c4.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n","const API_BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${API_BASE_URL}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method==='GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport const fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${API_BASE_URL}/${endpoint}`;\r\n\r\n    if (method==='GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}","export const types = {\r\n\r\n    UI_OPEN_MODAL : '[UI] Open modal',\r\n    UI_CLOSE_MODAL: '[UI] Close modal',\r\n\r\n    EVENT_SET_ACTIVE: '[Event] Set active',\r\n    EVENT_START_NEW: '[Event] Start add new event',\r\n    EVENT_ADD_NEW: '[Event] Add new event',\r\n    EVENT_CLEAR_ACTIVE: '[Event] Clear active event',\r\n    EVENT_UPDATE: '[Event] Event updated',\r\n    EVENT_DELETE: '[Event] Event deleted',\r\n    EVENT_START_LOADING: '[Event] Start loading events',\r\n    EVENT_LOADED: '[Event] Events loaded',\r\n    EVENTS_CLEAR_LOGOUT: '[Event] Clear events',\r\n\r\n    AUTH_CHECKING_FINISH: '[Auth] Finish checking login state',\r\n    AUTH_START_LOGIN: '[Auth] Start Login',\r\n    AUTH_LOGIN: '[Auth] Login',\r\n    AUTH_START_REGISTER: '[Auth] Start register',\r\n    AUTH_START_TOKEN_RENEW: '[Auth] Start token renew',\r\n    AUTH_LOGOUT: '[Auth] Logout',\r\n\r\n}","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (event) => ({\r\n            ...event,\r\n            end: moment(event.end).toDate(),\r\n            start: moment(event.start).toDate()\r\n\r\n        })\r\n    );\r\n}","import {types} from \"../types/types\";\r\nimport {fetchWithToken} from \"../helpers/fetch\";\r\nimport {prepareEvents} from \"../helpers/prepare-events\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const startEventAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok){\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n\r\n    };\r\n}\r\n\r\n\r\nconst eventAddNew = (event) => {\r\n    return {\r\n        type: types.EVENT_ADD_NEW,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const eventSetActive = (event) => {\r\n    return {\r\n        type: types.EVENT_SET_ACTIVE,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const clearActiveEvent = () => {\r\n    return {\r\n        type: types.EVENT_CLEAR_ACTIVE\r\n    }\r\n}\r\n\r\nexport const startEventUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => {\r\n    return {\r\n        type: types.EVENT_UPDATE,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const startEventDeleted = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n\r\n       try{\r\n           const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n           const body = await resp.json();\r\n\r\n           if (body.ok) {\r\n                dispatch(eventDeleted());\r\n           } else {\r\n               Swal.fire('Error', body.msg, 'error');\r\n           }\r\n       } catch (e){\r\n           console.log(e);\r\n       }\r\n\r\n    }\r\n}\r\n\r\nexport const eventDeleted = () => {\r\n    return {\r\n        type: types.EVENT_DELETE\r\n    }\r\n}\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchWithToken('events', {});\r\n        const body = await resp.json();\r\n\r\n        const events = prepareEvents(body.events);\r\n\r\n        if (body.ok) {\r\n            dispatch(eventLoaded(events));\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => {\r\n    return {\r\n        type: types.EVENT_LOADED,\r\n        payload: events\r\n    }\r\n}\r\n\r\nexport const eventsClear = () => {\r\n    return {\r\n        type: types.EVENTS_CLEAR_LOGOUT\r\n    }\r\n}","import {fetchWithoutToken, fetchWithToken} from \"../helpers/fetch\";\r\nimport {types} from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport {eventsClear} from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchWithoutToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-create-date', new Date().getTime());\r\n\r\n            dispatch(login({uid: body.uid, name: body.name}));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchWithoutToken('auth/new', {name, email, password}, 'POST');\r\n        const data = await resp.json();\r\n\r\n        if (data.ok) {\r\n            localStorage.setItem('token', data.token);\r\n            localStorage.setItem('token-create-date', new Date().getTime());\r\n\r\n            dispatch(login({uid: data.uid, name: data.name}));\r\n        } else {\r\n            Swal.fire('Error', data.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst login = (user) => {\r\n    return {\r\n        type: types.AUTH_LOGIN,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchWithToken('auth/renew', {});\r\n        const data = await resp.json();\r\n\r\n        if (data.ok) {\r\n            localStorage.setItem('token', data.token);\r\n            localStorage.setItem('token-create-date', new Date().getTime());\r\n\r\n            dispatch(login({uid: data.uid, name: data.name}));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => {\r\n    return {\r\n        type: types.AUTH_CHECKING_FINISH\r\n    }\r\n}\r\n\r\nexport const startlogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventsClear());\r\n    }\r\n}\r\n\r\nconst logout = () => {\r\n    return {\r\n        type: types.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\n","import './login.css';\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {startLogin, startRegister} from \"../../actions/auth\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction LoginScreen () {\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rEmail: '',\r\n        rPassword: '',\r\n        rPassword2: '',\r\n        rName: ''\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n    const {rEmail, rPassword, rPassword2, rName} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword!==rPassword2) {\r\n            Swal.fire('Error', 'Las contraseñas deben de ser iguales.', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(rName, rEmail, rPassword));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                                placeholder=\"Contraseña\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword\"\r\n                                value={rPassword}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default LoginScreen;","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {startlogout} from \"../../actions/auth\";\r\n\r\nfunction NavBar () {\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startlogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n            <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar;","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","function CalendarEvent ({ event }) {\r\n\r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\nexport default CalendarEvent;","import {types} from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => {\r\n    return {\r\n        type: types.UI_OPEN_MODAL\r\n    }\r\n}\r\n\r\nexport const uiCloseModal = () => {\r\n    return {\r\n        type: types.UI_CLOSE_MODAL\r\n    }\r\n}","import Modal from 'react-modal';\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport moment from \"moment\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Swal from 'sweetalert2';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {uiCloseModal} from \"../../actions/modal\";\r\nimport {clearActiveEvent, startEventAddNew, startEventUpdate} from \"../../actions/events\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst endDate = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: endDate.toDate()\r\n}\r\n\r\n\r\nfunction CalendarModal () {\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(endDate.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {title, notes, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            Swal.fire('Error', 'La fecha de fin debe ser mayor que la de inicio.', 'error');\r\n            return;\r\n        }\r\n\r\n        if (title.trim().length<2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(startEventUpdate(formValues));\r\n        } else {\r\n            dispatch(startEventAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        setFormValues(initEvent);\r\n        dispatch(clearActiveEvent());\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        console.log(e);\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDate = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            style={customStyles}\r\n            onRequestClose={closeModal}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { activeEvent ? 'Editando evento' : 'Crear evento' } </h1>\r\n            <hr />\r\n            <form\r\n                onSubmit={handleSubmitForm}\r\n                className=\"container\"\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleEndDate}\r\n                        minDate={dateStart}\r\n                        value={dateEnd}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && `is-invalid`}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea><small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default CalendarModal;","import {useDispatch} from \"react-redux\";\r\nimport {uiOpenModal} from \"../../actions/modal\";\r\n\r\nfunction AddNewFab () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClick}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AddNewFab;","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearActiveEvent, eventDeleted, startEventDeleted} from \"../../actions/events\";\r\n\r\nfunction DeleteEventFab () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startEventDeleted());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteEventFab;","import moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport {Calendar, momentLocalizer} from \"react-big-calendar\"\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport NavBar from \"../ui/NavBar\";\r\nimport {messages} from \"../../helpers/calendar-messages-es\";\r\nimport CalendarEvent from \"./CalendarEvent\";\r\nimport {useEffect, useState} from \"react\";\r\nimport CalendarModal from \"./CalendarModal\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {uiOpenModal} from \"../../actions/modal\";\r\nimport {clearActiveEvent, eventSetActive, eventStartLoading} from \"../../actions/events\";\r\nimport AddNewFab from \"../ui/AddNewFab\";\r\nimport DeleteEventFab from \"../ui/DeleteEventFab\";\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nfunction CalendarScreen () {\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, []);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(clearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid===event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            {\r\n                activeEvent && <DeleteEventFab />\r\n            }\r\n            <AddNewFab />\r\n            <CalendarModal/>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default CalendarScreen;","import {Route, Redirect} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PublicRoute ({\r\n    isAuthenticated,\r\n   component: Component,\r\n   ...rest\r\n}) {\r\n    return (\r\n        <Route {...rest}\r\n           component={ (props) => (\r\n               (!isAuthenticated) ?\r\n                   <Component {...props} /> :\r\n                   <Redirect to=\"/\" />\r\n           )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute;","import {Route, Redirect} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PrivateRoute ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated) ?\r\n                    <Component {...props} /> :\r\n                    <Redirect to=\"/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PrivateRoute;","import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport LoginScreen from \"../components/auth/LoginScreen\";\r\nimport CalendarScreen from \"../components/calendar/CalendarScreen\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {startChecking} from \"../actions/auth\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nfunction AppRouter () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return <h5>Loading...</h5>\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        isAuthenticated={!!uid}\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                    />\r\n                    <PrivateRoute\r\n                        isAuthenticated={!!uid}\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\nexport default AppRouter;","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.UI_OPEN_MODAL:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.UI_CLOSE_MODAL:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import moment from \"moment\";\r\nimport {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.EVENT_SET_ACTIVE:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.EVENT_ADD_NEW:\r\n            return {\r\n                ...state,\r\n                events: [action.payload, ...state.events]\r\n            }\r\n        case types.EVENT_CLEAR_ACTIVE:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.EVENT_UPDATE:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id===action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.EVENT_DELETE:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(e => (e.id!==state.activeEvent.id)),\r\n                activeEvent:  null\r\n            }\r\n        case types.EVENT_LOADED:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.EVENTS_CLEAR_LOGOUT:\r\n            return {\r\n                ...state,\r\n                activeEvent: null,\r\n                events: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.AUTH_LOGIN:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.AUTH_CHECKING_FINISH:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.AUTH_LOGOUT:\r\n            return {\r\n               checking: false\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {combineReducers} from \"redux\";\r\nimport {uiReducer} from \"./uiReducer\";\r\nimport {calendarReducer} from \"./calendarReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n   ui: uiReducer,\r\n   calendar: calendarReducer,\r\n   auth: authReducer,\r\n});","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport {rootReducer} from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import AppRouter from \"./router/AppRouter\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CalendarApp} from \"./CalendarApp\";\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}